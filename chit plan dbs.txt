CREATE TABLE payments (
    payment_id INT AUTO_INCREMENT PRIMARY KEY,
    user_scheme_id INT NOT NULL,
    due_month varchar(10) NOT NULL, -- YYYY-MM format for each payment period
    amount DECIMAL(10, 2) NOT NULL,
    status ENUM('paid', 'pending') DEFAULT 'pending',
    payment_date TIMESTAMP NULL DEFAULT NULL,
    FOREIGN KEY (user_scheme_id) REFERENCES user_schemes(user_scheme_id) ON DELETE CASCADE,
    UNIQUE (user_scheme_id, due_month) -- Ensures no duplicate payments for the same month
);


CREATE TABLE user_schemes (
    user_scheme_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    scheme_id INT NOT NULL,
    end_date DATE NULL, -- NULL until the scheme ends
    status ENUM('active', 'completed', 'delivered') DEFAULT 'active',
    total_paid int DEFAULT 0, 
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (scheme_id) REFERENCES savings_schemes(scheme_id) ON DELETE CASCADE
);



CREATE TABLE savings_schemes (
    scheme_id INT AUTO_INCREMENT PRIMARY KEY,
    scheme_name VARCHAR(50) NOT NULL,
    duration INT DEFAULT 12,
    plan_amount INT NOT NULL,
    created_at DATE NOT NULL
);

CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100)  NOT NULL,
    phone VARCHAR(15) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    istemp_pass bool default true,
    registered_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
